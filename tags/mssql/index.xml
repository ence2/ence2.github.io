<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mssql on The Game Server Developer</title>
    <link>https://ence2.github.io/tags/mssql/</link>
    <description>Recent content in Mssql on The Game Server Developer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Sun, 15 Nov 2020 15:29:56 +0900</lastBuildDate>
    
	<atom:link href="https://ence2.github.io/tags/mssql/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Mssql Procedure 프로시저</title>
      <link>https://ence2.github.io/2020/11/mssql-procedure-%ED%94%84%EB%A1%9C%EC%8B%9C%EC%A0%80/</link>
      <pubDate>Sun, 15 Nov 2020 15:29:56 +0900</pubDate>
      
      <guid>https://ence2.github.io/2020/11/mssql-procedure-%ED%94%84%EB%A1%9C%EC%8B%9C%EC%A0%80/</guid>
      <description>&lt;p&gt;저장 프로시저는 다음과 같은 점에서 다른 프로그래밍 언어의 프로시저와 유사합니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;입력 매개 변수를 받아 여러 값을 출력 매개 변수의 형태로 호출하는 프로시저 또는 일괄 처리에 반환합니다.&lt;/li&gt;
&lt;li&gt;다른 프로시저 호출을 비롯하여 데이터베이스에서 작업을 수행하는 프로그래밍 문이 포함되어 있습니다.&lt;/li&gt;
&lt;li&gt;호출하는 프로시저 또는 일괄 처리에 상태 값을 반환하여 성공 또는 실패 및 실패 원인을 나타냅니다.&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Mssql Cursor</title>
      <link>https://ence2.github.io/2020/11/mssql-cursor/</link>
      <pubDate>Sun, 15 Nov 2020 15:17:47 +0900</pubDate>
      
      <guid>https://ence2.github.io/2020/11/mssql-cursor/</guid>
      <description>&lt;p&gt;커서는 행 단위 작업을 추가로 제어해야 할 경우 사용되는 기능입니다.&lt;/p&gt;

&lt;p&gt;여러 행을 select 하여 While 반복문 등에 활용 될 수 있습니다. 프로그래밍의 for문의 첨자 i와 비슷합니다.&lt;/p&gt;

&lt;p&gt;프로시저 작성시 활용됩니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MsSQL 값 자동 증가 identity와 시퀀스(sequence)</title>
      <link>https://ence2.github.io/2020/11/mssql-%EA%B0%92-%EC%9E%90%EB%8F%99-%EC%A6%9D%EA%B0%80-identity%EC%99%80-%EC%8B%9C%ED%80%80%EC%8A%A4sequence/</link>
      <pubDate>Sun, 15 Nov 2020 14:27:54 +0900</pubDate>
      
      <guid>https://ence2.github.io/2020/11/mssql-%EA%B0%92-%EC%9E%90%EB%8F%99-%EC%A6%9D%EA%B0%80-identity%EC%99%80-%EC%8B%9C%ED%80%80%EC%8A%A4sequence/</guid>
      <description>&lt;p&gt;MsSQL에서 identity 옵션은 MySQL의 auto increment 옵션과 같습니다. (insert시 컬럼 값 자동 증가)&lt;/p&gt;

&lt;p&gt;위 옵션들은 해당 테이블에 종속적이며, 여러 테이블에 걸친 전역적인 값 증가는 sequence라는 객체를 사용합니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MsSQL UDF(User Defined Functions)</title>
      <link>https://ence2.github.io/2020/11/mssql-udfuser-defined-functions/</link>
      <pubDate>Sun, 15 Nov 2020 14:12:55 +0900</pubDate>
      
      <guid>https://ence2.github.io/2020/11/mssql-udfuser-defined-functions/</guid>
      <description>&lt;p&gt;프로그래밍 언어의 함수처럼 SQL Server 사용자 정의 함수는 매개 변수를 받아들이고 복잡한 계산과 같은 동작을 수행하며 해당 작업의 결과를 값으로 반환합니다. 반환 값은 단일 스칼라 값이나 결과 집합일 수 있습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Mssql 무결성 강제 적용(제약조건) PRIMARY KEY 및 FOREIGN KEY</title>
      <link>https://ence2.github.io/2020/11/mssql-%EB%AC%B4%EA%B2%B0%EC%84%B1-%EA%B0%95%EC%A0%9C-%EC%A0%81%EC%9A%A9%EC%A0%9C%EC%95%BD%EC%A1%B0%EA%B1%B4-primary-key-%EB%B0%8F-foreign-key/</link>
      <pubDate>Sun, 15 Nov 2020 13:39:43 +0900</pubDate>
      
      <guid>https://ence2.github.io/2020/11/mssql-%EB%AC%B4%EA%B2%B0%EC%84%B1-%EA%B0%95%EC%A0%9C-%EC%A0%81%EC%9A%A9%EC%A0%9C%EC%95%BD%EC%A1%B0%EA%B1%B4-primary-key-%EB%B0%8F-foreign-key/</guid>
      <description>&lt;p&gt;MsSQL 테이블에서 데이터 무결성을 강제 적용하는 데 사용할 수 있는 두 가지 유형의 제약 조건으로 기본 키와 외래 키가 있습니다. 이들 키는 중요한 데이터베이스 개체입니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MsSQL SET QUOTED_IDENTIFIER ON|OFF</title>
      <link>https://ence2.github.io/2020/11/mssql-set-quoted_identifier-onoff/</link>
      <pubDate>Sat, 14 Nov 2020 22:08:35 +0900</pubDate>
      
      <guid>https://ence2.github.io/2020/11/mssql-set-quoted_identifier-onoff/</guid>
      <description>&lt;h4 id=&#34;구문&#34;&gt;구문&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-mssql&#34;&gt;-- Syntax for SQL Server, Azure SQL Database and SQL on-demand (preview) in Azure Synapse Analytics

SET QUOTED_IDENTIFIER { ON | OFF }
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>MsSQL SET ANSI_NULLS ON|OFF</title>
      <link>https://ence2.github.io/2020/11/mssql-set-ansi_nulls-onoff/</link>
      <pubDate>Sat, 14 Nov 2020 22:00:20 +0900</pubDate>
      
      <guid>https://ence2.github.io/2020/11/mssql-set-ansi_nulls-onoff/</guid>
      <description>&lt;h4 id=&#34;구문&#34;&gt;구문&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-mssql&#34;&gt;-- Syntax for SQL Server

SET ANSI_NULLS { ON | OFF }
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>MsSQL 실행계획 분석법</title>
      <link>https://ence2.github.io/2020/11/mssql-%EC%8B%A4%ED%96%89%EA%B3%84%ED%9A%8D-%EB%B6%84%EC%84%9D%EB%B2%95/</link>
      <pubDate>Sat, 14 Nov 2020 21:41:03 +0900</pubDate>
      
      <guid>https://ence2.github.io/2020/11/mssql-%EC%8B%A4%ED%96%89%EA%B3%84%ED%9A%8D-%EB%B6%84%EC%84%9D%EB%B2%95/</guid>
      <description>&lt;p&gt;쿼리문을 작성하다보면 해당 쿼리가 최선인지 애매한 순간이 있습니다. 이 때 DBMS에서 제공하는 실행계획 기능을 활용하면 더 나은 판단이 가능합니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MsSQL Merge문</title>
      <link>https://ence2.github.io/2020/11/mssql-merge%EB%AC%B8/</link>
      <pubDate>Sat, 14 Nov 2020 21:19:54 +0900</pubDate>
      
      <guid>https://ence2.github.io/2020/11/mssql-merge%EB%AC%B8/</guid>
      <description>&lt;p&gt;SQL Server 2008 부터 지원되는 MERGE문은 조건에 따라 INSERT, UPDATE ,DELETE등을 한 문장으로 간단히 실행할 수 있는 편리한 TSQL 문장입니다. MERGE가 없는 이전 버전의 경우 보통 IF문 등으로 조건을 먼저 체크하고 DML 문장(INSERT, UPDATE ,DELETE)을 각각 나눠서 여러 문장으로 기술해야 했습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MsSQL with nolock</title>
      <link>https://ence2.github.io/2020/11/mssql-with-nolock/</link>
      <pubDate>Wed, 11 Nov 2020 21:13:26 +0900</pubDate>
      
      <guid>https://ence2.github.io/2020/11/mssql-with-nolock/</guid>
      <description>&lt;p&gt;MSSQL은 기본적으로 SELECT 시에 공유잠금(TRANSACTION ISOLATION READ COMMIT)이 걸리게 됩니다.&lt;/p&gt;

&lt;p&gt;MSSQL에서 SELECT 시에 &lt;strong&gt;WITH (NOLOCK)&lt;/strong&gt; 을 주면 공유잠금을 걸지 않고 바로 조회 수행합니다.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;SELECT * FROM TABLE1 WITH (NOLOCK)
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
  </channel>
</rss>