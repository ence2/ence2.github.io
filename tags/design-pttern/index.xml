<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Design Pttern on Keep calm carry on</title>
    <link>https://ence2.github.io/tags/design-pttern/</link>
    <description>Recent content in Design Pttern on Keep calm carry on</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Fri, 06 Aug 2021 07:00:00 +0900</lastBuildDate>
    
	<atom:link href="https://ence2.github.io/tags/design-pttern/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Design pattern in C&#43;&#43; - 통보, 열거, 방문[5]</title>
      <link>https://ence2.github.io/2021/08/design-pattern-in-c-%ED%86%B5%EB%B3%B4-%EC%97%B4%EA%B1%B0-%EB%B0%A9%EB%AC%B85/</link>
      <pubDate>Fri, 06 Aug 2021 07:00:00 +0900</pubDate>
      
      <guid>https://ence2.github.io/2021/08/design-pattern-in-c-%ED%86%B5%EB%B3%B4-%EC%97%B4%EA%B1%B0-%EB%B0%A9%EB%AC%B85/</guid>
      <description>&lt;p&gt;이번 시간에는 Observer 패턴, Container 설계의 기술, Iterator 패턴, Visitor 패턴에 대해 알아보겠습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Design pattern in C&#43;&#43; - 간접층의 원리[4]</title>
      <link>https://ence2.github.io/2021/08/design-pattern-in-c-%EA%B0%84%EC%A0%91%EC%B8%B5%EC%9D%98-%EC%9B%90%EB%A6%AC4/</link>
      <pubDate>Mon, 02 Aug 2021 07:00:00 +0900</pubDate>
      
      <guid>https://ence2.github.io/2021/08/design-pattern-in-c-%EA%B0%84%EC%A0%91%EC%B8%B5%EC%9D%98-%EC%9B%90%EB%A6%AC4/</guid>
      <description>&lt;p&gt;이번 시간에는 Adapter, Proxy, Facade, Bridge에 대해 알아보겠습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Design pattern in C&#43;&#43; - 재귀적 포함[3]</title>
      <link>https://ence2.github.io/2021/07/design-pattern-in-c-%EC%9E%AC%EA%B7%80%EC%A0%81-%ED%8F%AC%ED%95%A83/</link>
      <pubDate>Sat, 31 Jul 2021 09:00:00 +0900</pubDate>
      
      <guid>https://ence2.github.io/2021/07/design-pattern-in-c-%EC%9E%AC%EA%B7%80%EC%A0%81-%ED%8F%AC%ED%95%A83/</guid>
      <description>&lt;p&gt;이번시간에는 Composite 패턴, Decorator 패턴에 대해 살펴보겠습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Design pattern in C&#43;&#43; - 공통성과 가변성의 분리[2]</title>
      <link>https://ence2.github.io/2021/07/design-pattern-in-c-%EA%B3%B5%ED%86%B5%EC%84%B1%EA%B3%BC-%EA%B0%80%EB%B3%80%EC%84%B1%EC%9D%98-%EB%B6%84%EB%A6%AC2/</link>
      <pubDate>Fri, 30 Jul 2021 08:00:00 +0900</pubDate>
      
      <guid>https://ence2.github.io/2021/07/design-pattern-in-c-%EA%B3%B5%ED%86%B5%EC%84%B1%EA%B3%BC-%EA%B0%80%EB%B3%80%EC%84%B1%EC%9D%98-%EB%B6%84%EB%A6%AC2/</guid>
      <description>&lt;p&gt;이번시간에는 변하는 것을 분리하는 방법, 단위 전략 디자인, 상태 패턴 등에 대해 알아보겠습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Design pattern in C&#43;&#43; - Intro[1]</title>
      <link>https://ence2.github.io/2021/07/design-pattern-in-c-intro1/</link>
      <pubDate>Wed, 28 Jul 2021 08:00:00 +0900</pubDate>
      
      <guid>https://ence2.github.io/2021/07/design-pattern-in-c-intro1/</guid>
      <description>&lt;p&gt;디자인 패턴의 개념, protected constructor, upcasting, coupling, 객체지향 등에 대해 살펴보겠습니다.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>