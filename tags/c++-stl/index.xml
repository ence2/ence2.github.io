<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C&#43;&#43; STL on Keep calm carry on</title>
    <link>https://ence2.github.io/tags/c&#43;&#43;-stl/</link>
    <description>Recent content in C&#43;&#43; STL on Keep calm carry on</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Sat, 10 Jul 2021 08:00:00 +0900</lastBuildDate><atom:link href="https://ence2.github.io/tags/c++-stl/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>C&#43;&#43; STL - Concurrency[7]</title>
      <link>https://ence2.github.io/2021/07/c-stl-concurrency7/</link>
      <pubDate>Sat, 10 Jul 2021 08:00:00 +0900</pubDate>
      
      <guid>https://ence2.github.io/2021/07/c-stl-concurrency7/</guid>
      <description>&lt;p&gt;이번 시간에는 STL의 동시성 처리 관련 라이브러리를 살펴보겠습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>C&#43;&#43; STL - Algorithm[4]</title>
      <link>https://ence2.github.io/2021/06/c-stl-algorithm4/</link>
      <pubDate>Mon, 28 Jun 2021 08:00:00 +0900</pubDate>
      
      <guid>https://ence2.github.io/2021/06/c-stl-algorithm4/</guid>
      <description>&lt;p&gt;이번 시간에는 STL의 알고리즘에 관해 살펴보겠습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>C&#43;&#43; STL - Iterator[3]</title>
      <link>https://ence2.github.io/2021/06/c-stl-iterator3/</link>
      <pubDate>Sun, 27 Jun 2021 21:00:00 +0900</pubDate>
      
      <guid>https://ence2.github.io/2021/06/c-stl-iterator3/</guid>
      <description>&lt;p&gt;이번 시간에는 iterator와 range에 대해 살펴보겠습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>C&#43;&#43; STL - Container[5]</title>
      <link>https://ence2.github.io/2021/06/c-stl-container5/</link>
      <pubDate>Sun, 27 Jun 2021 08:00:00 +0900</pubDate>
      
      <guid>https://ence2.github.io/2021/06/c-stl-container5/</guid>
      <description>&lt;p&gt;이번 시간에는 STL의 Container에 대해서 알아보겠습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>C&#43;&#43; STL - Utility[6]</title>
      <link>https://ence2.github.io/2021/06/c-stl-utility6/</link>
      <pubDate>Sun, 27 Jun 2021 08:00:00 +0900</pubDate>
      
      <guid>https://ence2.github.io/2021/06/c-stl-utility6/</guid>
      <description>&lt;p&gt;이번 시간에는 STL의 스마트 포인터, &lt;!-- raw HTML omitted --&gt;, &lt;!-- raw HTML omitted --&gt;에 대해 살펴보겠습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>C&#43;&#43; STL - STL 설계 철학[2]</title>
      <link>https://ence2.github.io/2021/06/c-stl-stl-%EC%84%A4%EA%B3%84-%EC%B2%A0%ED%95%992/</link>
      <pubDate>Sat, 26 Jun 2021 09:00:00 +0900</pubDate>
      
      <guid>https://ence2.github.io/2021/06/c-stl-stl-%EC%84%A4%EA%B3%84-%EC%B2%A0%ED%95%992/</guid>
      <description>&lt;p&gt;이번 시간에는 다음 내용을 살펴보겠습니다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;제너릭 알고리즘의 개념, 컨테이너와 알고리즘의 연결(iterator)&lt;/li&gt;
&lt;li&gt;STL의 구조와 유사한 방식으로 간략한 라이브러리 설계&lt;/li&gt;
&lt;li&gt;예제&lt;/li&gt;
&lt;li&gt;C++17 이후의 STL 변화&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>C&#43;&#43; STL - Preview[1]</title>
      <link>https://ence2.github.io/2021/06/c-stl-preview1/</link>
      <pubDate>Sat, 26 Jun 2021 08:00:00 +0900</pubDate>
      
      <guid>https://ence2.github.io/2021/06/c-stl-preview1/</guid>
      <description>&lt;p&gt;C++ 표준 라이브러리인 STL에 대해서 학습하는 시리즈입니다. 단순한 STL의 사용법 뿐 아니라 STL의 주요 요소를 직접 구현해 보면서 STL의 설계 철학도 배우게 됩니다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;STL의 단순한 개념뿐 아니라 iterator_category, iterator_traits 등의 깊이 있는 개념을 배우게 됩니다.&lt;/li&gt;
&lt;li&gt;shared_ptr&amp;lt;&amp;gt;, weak_ptr&amp;lt;&amp;gt;, unique_ptr&amp;lt;&amp;gt;등의 스마트 포인터에 대해서 배우게 됩니다.&lt;/li&gt;
&lt;li&gt;thread/future/async 등 스레드 관련 라이브러리를 배우게 됩니다.&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
  </channel>
</rss>
